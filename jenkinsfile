// def loadEnvironment() {
//     environment {
//         MVN_SETTINGS_PATH = credentials('maven-artifactory-settings')
//     }
// }

def mavenInstall() {
    script {
        withCredentials([file(credentialsId: 'maven-artifactory-settings', variable: 'MVN_SETTINGS_PATH')]) {
            sh script: '''
                mkdir -p ~/.m2
                ln -sf $MVN_SETTINGS_PATH ~/.m2/settings.xml
                ${MVN} clean install -q -ff ${MAVEN_SKIP} ${MAVEN_SKIP_TESTS} -T 1C
            ''',
            label: 'mvn install'
        }
    }
}

def imageJDK8() {
    return 'maven:3.6.3-jdk-8'
}

pipeline {
    options {
        timeout(time: 2, unit: 'HOURS')
    }
    agent none
  // agent {
  //     docker {
  //         image 'docker/druid-ci-jdk8:latest'
  //         registryUrl 'https://repo.qa.imply.io/artifactory'
  //         registryCredentialsId 'repo.qa.imply.io'
  //         args '-u root:root --runtime=sysbox-runc -e DOCKER_REGISTRY_MIRROR=https://registry-mirror.qa.imply.io:443'
  //         label 'jenkinsOnDemand'
  //     }
  // }

  environment {
    MVN = "mvn -B"
    MAVEN_SKIP = "-Danimal.sniffer.skip=true -Dcheckstyle.skip=true -Ddruid.console.skip=true -Denforcer.skip=true -Dforbiddenapis.skip=true -Dmaven.javadoc.skip=true -Dpmd.skip=true -Dspotbugs.skip=true"
    MAVEN_SKIP_TESTS = "-DskipTests -Djacoco.skip=true"
    MAVEN_OPTS = "-Xms4g -Xmx8g -XX:MaxDirectMemorySize=2048m"
  }

  stages {
    // stage('docker test') {
    //   steps {
    //     sh '''#!/bin/bash -x
    //         cat /etc/docker/daemon.json
    //         printenv
    //         docker run --rm -t alpine:latest ls -alt
    //         tail -n 200 /var/log/dockerd.log
    //     '''

    //     // script {
    //     //     input message: "Do you want to repackage"
    //     // }
    //   }
    // }
    stage('Checks') {
        parallel {
            stage('security vulnerabilities') {
                // agent {
                //     docker {
                //         image 'maven:3.6.3-jdk-8'
                //         args '--memory=8g --memory-reservation=4g -u root:root'
                //         label 'jenkinsOnDemandMultiExec'
                //     }
                // }
                agent { image(imageJDK8()); args('--memory=8g --memory-reservation=4g -u root:root'); label('jenkinsOnDemandMultiExec') }
                steps {
                    mavenInstall()
                    sh script: 'echo $HOSTNAME'
                    sh script: '''#!/bin/bash
                        set -o pipefail

                        ${MVN} dependency-check:check || \
                        { echo "The OWASP dependency check has found security vulnerabilities. Please use a newer version
                        of the dependency that does not have vulnerabilities. If the analysis has false positives,
                        they can be suppressed by adding entries to owasp-dependency-check-suppressions.xml (for more
                        information, see https://jeremylong.github.io/DependencyCheck/general/suppression.html).
                        " && false; }
                    ''',
                    label: 'dependency check'
                }
                // post {
                //     always {
                //         junit "**/TEST-*.xml"
                //     }
                // }
            }
            stage('Filler') {
                // agent {
                //     docker {
                //         image 'maven:3.6.3-jdk-8'
                //         args '--memory=8g --memory-reservation=4g -u root:root'
                //         label 'jenkinsOnDemandMultiExec'
                //     }
                // }
                agent { image(imageJDK8()); args('--memory=8g --memory-reservation=4g -u root:root') label('jenkinsOnDemandMultiExec') }
                steps {
                    sh script: 'echo $HOSTNAME'
                    sh 'printenv'
                    sh "echo 'this is filler!'"
                }
                // post {
                //     always {
                //         junit "**/TEST-*.xml"
                //     }
                // }
            }
            stage('Filler2') {
                // agent {
                //     docker {
                //         image 'maven:3.6.3-jdk-11'
                //         args '--memory=8g --memory-reservation=4g -u root:root'
                //         label 'jenkinsOnDemandMultiExec'
                //     }
                // }
                agent { image('maven:3.6.3-jdk-11'); args('--memory=8g --memory-reservation=4g -u root:root') label('jenkinsOnDemandMultiExec') }
                steps {
                    sh script: 'echo $HOSTNAME'
                    sh 'printenv'
                    sh "echo 'this is filler2!'"
                }
                // post {
                //     always {
                //         junit "**/TEST-*.xml"
                //     }
                // }
            }
        }
    }
    // stage ('helm') {
    //   steps {
    //     sh 'printenv'
    //   }
    // }
  }
}